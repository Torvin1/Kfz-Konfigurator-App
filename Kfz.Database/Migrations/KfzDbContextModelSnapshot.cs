// <auto-generated />
using System;
using Kfz.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Kfz.Database.Migrations
{
    [DbContext(typeof(KfzDbContext))]
    partial class KfzDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Kfz.Database.Fuel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EcoFriendlinessRating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Fuels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Elektro",
                            EcoFriendlinessRating = 1
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Hybrid",
                            EcoFriendlinessRating = 2
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Benzin",
                            EcoFriendlinessRating = 3
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "Diesel",
                            EcoFriendlinessRating = 4
                        });
                });

            modelBuilder.Entity("Kfz.Database.Manufacturer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BasePrice")
                        .HasColumnType("int");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Manufacturers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BasePrice = 15000,
                            DisplayName = "Volkswagen"
                        },
                        new
                        {
                            Id = 2,
                            BasePrice = 20000,
                            DisplayName = "Opel"
                        },
                        new
                        {
                            Id = 3,
                            BasePrice = 30000,
                            DisplayName = "BMW"
                        });
                });

            modelBuilder.Entity("Kfz.Database.Motor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FuelId")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.ToTable("Motors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Benzin 1.6",
                            FuelId = 3,
                            Price = 1500
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Benzin 2.5",
                            FuelId = 3,
                            Price = 5000
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Diesel 1.8",
                            FuelId = 4,
                            Price = 2000
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "Diesel 3.5",
                            FuelId = 4,
                            Price = 4000
                        },
                        new
                        {
                            Id = 5,
                            DisplayName = "Hybrid 1.0",
                            FuelId = 2,
                            Price = 2500
                        },
                        new
                        {
                            Id = 6,
                            DisplayName = "Hybrid 2.2",
                            FuelId = 2,
                            Price = 3500
                        },
                        new
                        {
                            Id = 7,
                            DisplayName = "Elektro 1.0",
                            FuelId = 1,
                            Price = 4500
                        },
                        new
                        {
                            Id = 8,
                            DisplayName = "Elektro 1.5",
                            FuelId = 1,
                            Price = 6000
                        });
                });

            modelBuilder.Entity("Kfz.Database.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Options");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "Klimaanlage",
                            Price = 2000
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "Alufelgen",
                            Price = 1000
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "Navigation",
                            Price = 500
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "Subwoofer",
                            Price = 100
                        });
                });

            modelBuilder.Entity("Kfz.Database.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateOnly>("BirthDate")
                        .HasColumnType("date");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FuelId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManufacturerId")
                        .HasColumnType("int");

                    b.Property<int>("MotorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FuelId");

                    b.HasIndex("ManufacturerId");

                    b.HasIndex("MotorId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("OrderOptions", b =>
                {
                    b.Property<int>("OptionsId")
                        .HasColumnType("int");

                    b.Property<int>("OrdersId")
                        .HasColumnType("int");

                    b.HasKey("OptionsId", "OrdersId");

                    b.HasIndex("OrdersId");

                    b.ToTable("OrderOptions");
                });

            modelBuilder.Entity("Kfz.Database.Motor", b =>
                {
                    b.HasOne("Kfz.Database.Fuel", "Fuel")
                        .WithMany("Motors")
                        .HasForeignKey("FuelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fuel");
                });

            modelBuilder.Entity("Kfz.Database.Order", b =>
                {
                    b.HasOne("Kfz.Database.Fuel", null)
                        .WithMany("Orders")
                        .HasForeignKey("FuelId");

                    b.HasOne("Kfz.Database.Manufacturer", "Manufacturer")
                        .WithMany("Orders")
                        .HasForeignKey("ManufacturerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Kfz.Database.Motor", "Motor")
                        .WithMany("Orders")
                        .HasForeignKey("MotorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Manufacturer");

                    b.Navigation("Motor");
                });

            modelBuilder.Entity("OrderOptions", b =>
                {
                    b.HasOne("Kfz.Database.Option", null)
                        .WithMany()
                        .HasForeignKey("OptionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Kfz.Database.Order", null)
                        .WithMany()
                        .HasForeignKey("OrdersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Kfz.Database.Fuel", b =>
                {
                    b.Navigation("Motors");

                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Kfz.Database.Manufacturer", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("Kfz.Database.Motor", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
